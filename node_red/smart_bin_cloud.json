[
    {
        "id": "d8a8b03ca0bdc51d",
        "type": "tab",
        "label": "Smart-Bin-Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8b10913000d2c769",
        "type": "function",
        "z": "d8a8b03ca0bdc51d",
        "name": "Calculate Bin Level",
        "func": "// Distance range\nvar distanceStr = msg.payload.distance;\nvar distance = parseFloat(distanceStr);  // Convert the distance to a float\n\nvar minDistance = 10;  // Minimum distance when the bin is full\nvar maxDistance = 50;  // Maximum distance when the bin is empty\n\n// Calculate the bin level as a percentage (100% full, 0% empty)\nvar binLevel = Math.max(0, Math.min(100, ((maxDistance - distance) / (maxDistance - minDistance)) * 100));\n\n// Pass the bin level to next node\nmsg.payload = binLevel.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 200,
        "wires": [
            [
                "8008dfef2ae51546"
            ]
        ]
    },
    {
        "id": "74a57ca5e0726413",
        "type": "json",
        "z": "d8a8b03ca0bdc51d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "8b10913000d2c769",
                "86cd260476d5d80c"
            ]
        ]
    },
    {
        "id": "d150efcf6f71dcf7",
        "type": "mqtt in",
        "z": "d8a8b03ca0bdc51d",
        "name": "",
        "topic": "topic/ultrasonic_sensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3bb6bd8b.d72ce2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "74a57ca5e0726413"
            ]
        ]
    },
    {
        "id": "cd160294cd961ee7",
        "type": "ui_gauge",
        "z": "d8a8b03ca0bdc51d",
        "name": "",
        "group": "6e4f5d1b97ad152f",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Bin Level",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 980,
        "y": 200,
        "wires": []
    },
    {
        "id": "2bdf05910190a4fe",
        "type": "mqtt in",
        "z": "d8a8b03ca0bdc51d",
        "name": "",
        "topic": "classification/results",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3bb6bd8b.d72ce2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 400,
        "wires": [
            [
                "41f51fee55cad19e"
            ]
        ]
    },
    {
        "id": "af8e24f4d9d52f9f",
        "type": "firebase modify",
        "z": "d8a8b03ca0bdc51d",
        "name": "firebase_modify - send data to firebase",
        "firebaseconfig": "",
        "childpath": "data/smart-bin",
        "method": "push",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 950,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "41f51fee55cad19e",
        "type": "json",
        "z": "d8a8b03ca0bdc51d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 400,
        "wires": [
            [
                "6727b2543da604b3",
                "cf1d97d2343bf830"
            ]
        ]
    },
    {
        "id": "86cd260476d5d80c",
        "type": "function",
        "z": "d8a8b03ca0bdc51d",
        "name": "store ultrasonic in flow",
        "func": "flow.set('ultrasonicData', msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6727b2543da604b3",
        "type": "function",
        "z": "d8a8b03ca0bdc51d",
        "name": "combine and send",
        "func": "var ultrasonicData = flow.get('ultrasonicData');\n\nif(!ultrasonicData){\n    node.warn(\"No ultrasonic data available in flow\");\n    return null;\n}\n\nvar distance = parseFloat(ultrasonicData.distance)\n\nvar combinedData = {\n    classification : msg.payload,\n    ultrasonicSensor : distance + \" cm\",\n}\n\nmsg.payload = combinedData\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 400,
        "wires": [
            [
                "79252158ee77d709",
                "af8e24f4d9d52f9f"
            ]
        ]
    },
    {
        "id": "79252158ee77d709",
        "type": "debug",
        "z": "d8a8b03ca0bdc51d",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 780,
        "y": 340,
        "wires": []
    },
    {
        "id": "8008dfef2ae51546",
        "type": "delay",
        "z": "d8a8b03ca0bdc51d",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 200,
        "wires": [
            [
                "cd160294cd961ee7"
            ]
        ]
    },
    {
        "id": "d04af8d7d61ced5e",
        "type": "ui_template",
        "z": "d8a8b03ca0bdc51d",
        "group": "6e4f5d1b97ad152f",
        "name": "Classification Result",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-if=\"msg.payload.dataAvailable\" style=\"text-align:center; margin-bottom: 20px; border-bottom: 1px solid #ccc; padding-bottom: 10px;\">\n    <img src=\"{{msg.payload.imageUrl}}\" alt=\"Classified Image\" width=\"250\" height=\"250\">\n    <h5>Classification Result: {{msg.payload.classificationResult}}</h2>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "cf1d97d2343bf830",
        "type": "function",
        "z": "d8a8b03ca0bdc51d",
        "name": "Classification Dashboard Logic",
        "func": "var data = msg.payload;\nvar imageUrl = data.imageUrl || flow.get('lastImageUrl');\nvar classificationResult = data.classificationResult || flow.get('lastClassificationResult');\n\nif(imageUrl && classificationResult){\n    flow.set('lastImageUrl', imageUrl);\n    flow.set('lastClassificationResult', classificationResult);\n\n    msg.payload = {\n        imageUrl: imageUrl,\n        classificationResult: classificationResult,\n        dataAvailable: true\n    }\n} else{\n    msg.payload = {\n        dataAvailable: false\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 500,
        "wires": [
            [
                "d04af8d7d61ced5e"
            ]
        ]
    },
    {
        "id": "3bb6bd8b.d72ce2",
        "type": "mqtt-broker",
        "name": "publish",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6e4f5d1b97ad152f",
        "type": "ui_group",
        "name": "Smart Recycle Bin",
        "tab": "be84b5b463f01a88",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "be84b5b463f01a88",
        "type": "ui_tab",
        "name": "SmartBin",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]